# This is a basic workflow to help you get started with Actions

name: vue-CI

# Controls when the workflow will run
on: ["push", "pull_request"]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Run clone
        uses: actions/checkout@v3

      - name: Set up docker git
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      # - name: Set up node
      #   uses: actions/setup-node@v2-beta
      #   with: 
      #       node-version: '14.17'
      #       cache: "yarn"

      # - name: yarn install
      #   run: yarn install
      
      # - name: yarn build
      #   run: yarn build

      # - name: log dist file
      #   run: tree ./dist

      - name: set-output branch name
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/}  | awk -F '/' '{print $NF}')" 
          echo "##[set-output name=commit_id;]$(echo $(git rev-parse --short ${GITHUB_SHA}))"
        id: extract_branch_commit

      - name: docker build
        env:
          DOCKER_IMAGE_NAME: ${{ steps.extract_branch_commit.outputs.branch }}:${{steps.extract_branch_commit.outputs.commit_id}}
        run: docker build . -t ${DOCKER_IMAGE_NAME}


      # - name: login aliyun docker
      #   env:
      #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #     DOCKER_REGISTRY: registry.cn-hangzhou.aliyuncs.com
      #   run: echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin ${DOCKER_REGISTRY}

      - name: log imageid
        run: |
          echo ${{ steps.extract_branch_commit.outputs.branch }}:${{steps.extract_branch_commit.outputs.commit_id}}
          echo ${DOCKER_IMAGE_NAME}
        #   echo ${{ steps.docker_image.outputs.image_id }}

      # - name: docker image make tag
      #   env: 
      #     DOCKER_TAG: ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}
      #   run: docker tag ${{ steps.docker_image.outputs.image_id }} ${DOCKER_TAG}

      # - name: docker push
      #   run: docker push ${DOCKER_TAG}


